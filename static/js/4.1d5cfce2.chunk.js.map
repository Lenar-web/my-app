{"version":3,"sources":["components/Login/Form/Form.jsx","components/Login/Form/FormContainer.jsx","components/Login/Login.jsx"],"names":["LoginReduxForm","reduxForm","form","props","react_default","a","createElement","onSubmit","handleSubmit","className","Field","name","validate","required","component","Input","type","placeholder","id","htmlFor","captchaUrl","src","alt","error","compose","connect","state","profile","profilePage","status","isAuth","auth","login","getCaptcha","react_router","to","Login_Form_Form","Object","assign","formData","Login","href","Form_FormContainer"],"mappings":"wJAiCeA,EAFQC,YAAU,CAACC,KAAM,SAAjBD,CA1BZ,SAACE,GACV,OAAOC,EAAAC,EAAAC,cAAA,QAAMC,SAAUJ,EAAMK,cAC7BJ,EAAAC,EAAAC,cAAA,YAAUG,UAAU,cAElBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOD,UAAU,eAAeE,KAAK,QAAQC,SAAU,CAACC,KAAWC,UAAWC,IAAOC,KAAK,QAAQC,YAAY,8BAEhHb,EAAAC,EAAAC,cAAA,YAAUG,UAAU,cAClBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOD,UAAU,eAAeE,KAAK,WAAWC,SAAU,CAACC,KAAWC,UAAWC,IAAOC,KAAK,WAAWC,YAAY,6DAEtHb,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBACfL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOQ,GAAG,aAAaP,KAAK,aAAaG,UAAW,QAASE,KAAK,aAClEZ,EAAAC,EAAAC,cAAA,SAAOa,QAAQ,cAAf,oFAEChB,EAAMiB,YACPhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBAAgBY,IAAKlB,EAAMiB,WAAYE,IAAI,YAC1DlB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOD,UAAU,eAAeE,KAAK,UAAUG,UAAWC,IAAOH,SAAU,CAACC,KAAWG,KAAK,OAAOC,YAAY,gFAGhHd,EAAMoB,OACPnB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBAAiBN,EAAMoB,OAExCnB,EAAAC,EAAAC,cAAA,UAAQG,UAAU,iBAAlB,mECGgBe,cACdC,YARoB,SAACC,GAAD,MAAY,CAChCC,QAASD,EAAME,YAAYD,QAC3BE,OAAQH,EAAME,YAAYC,OAC1BC,OAAQJ,EAAMK,KAAKD,OACnBV,WAAYM,EAAMK,KAAKX,aAIE,CAACY,UAAOC,iBADnBT,CAvBI,SAACrB,GAOrB,OAAGA,EAAM2B,OACA1B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAUC,GAAI,aAGnB/B,EAAAC,EAAAC,cAAC8B,EAADC,OAAAC,OAAA,CAAgB/B,SAPH,SAACgC,GACdpC,EAAM6B,MAAMO,KAM4BpC,MCA7BqC,UAhBH,SAACrC,GAEX,OAAOC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAaL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBAC5CL,EAAAC,EAAAC,cAAA,KAAGmC,KAAK,aAAahC,UAAU,QAAOL,EAAAC,EAAAC,cAAA,OAAKe,IAAI,kBAAkBC,IAAI,mBACrElB,EAAAC,EAAAC,cAAA,MAAIG,UAAU,cAAd,kCACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACbL,EAAAC,EAAAC,cAACoC,EAAD,OAEFtC,EAAAC,EAAAC,cAAA,KAAGmC,KAAK,MAAR,4BACArC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAcY,IAAI,2BAA2BC,IAAI","file":"static/js/4.1d5cfce2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../../Common/FromsControl/FromsControl';\r\nimport { required } from '../../../utils/validators/validators';\r\n\r\nlet Form = (props) => {\r\n  return <form onSubmit={props.handleSubmit}>\r\n  <fieldset className=\"form-group\">\r\n\r\n    <Field className=\"form-control\" name=\"email\" validate={[required]} component={Input} type=\"email\" placeholder=\"Ваш email\"/>\r\n  </fieldset>\r\n  <fieldset className=\"form-group\">\r\n    <Field className=\"form-control\" name=\"password\" validate={[required]} component={Input} type=\"password\" placeholder=\"Ваш пароль\"/>\r\n  </fieldset>\r\n  <div className=\"rememberme-wrap\">\r\n  <Field id=\"rememberme\" name=\"rememberMe\" component={'input'} type=\"checkbox\"/>\r\n  <label htmlFor=\"rememberme\">Запомнить меня</label>\r\n  </div>\r\n  {props.captchaUrl &&\r\n  <div>\r\n    <img className=\"captcha-image\" src={props.captchaUrl} alt=\"Capthca\"/>\r\n    <Field className=\"form-control\" name=\"captcha\" component={Input} validate={[required]} type=\"text\" placeholder=\"Код с картинки\"/>\r\n  </div>\r\n  }\r\n  {props.error &&\r\n  <div className=\"error-summary\">{props.error}</div>\r\n}\r\n<button className=\"btn-secondary\">Войти</button>\r\n</form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(Form)\r\n\r\nexport default LoginReduxForm","import React from 'react';\r\nimport LoginReduxForm from './Form';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {login,getCaptcha} from '../../../redux/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nlet FormContainer = (props) => {\r\n\r\n\r\n  \r\n  let onSubmit = (formData) => {\r\n    props.login(formData)\r\n  }\r\nif(props.isAuth){\r\n  return <Redirect to={\"/profile\"} />\r\n}\r\n  return (\r\n    <LoginReduxForm onSubmit={onSubmit} {...props} />\r\n  )\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  isAuth: state.auth.isAuth,\r\n  captchaUrl: state.auth.captchaUrl\r\n })\r\n\r\n export default compose(\r\n  connect(mapStateToProps, {login, getCaptcha})\r\n)(FormContainer);","import React from 'react';\r\nimport FormContainer from './Form/FormContainer';\r\nlet Login = (props) => {\r\n\r\n  return <div className=\"login_wrap\"><div className=\"sign-up-form\">\r\n        <a href=\"index.html\" className=\"logo\"><img src=\"images/logo.png\" alt=\"Friend Finder\"/></a>\r\n        <h2 className=\"text-white\">Войти</h2>\r\n        <div className=\"line-divider\"></div>\r\n        <div className=\"form-wrapper\">\r\n          <FormContainer/>\r\n        </div>\r\n        <a href=\"#c\">Already have an account?</a>\r\n        <img className=\"form-shadow\" src=\"images/bottom-shadow.png\" alt=\"\" />\r\n      </div>\r\n      </div>\r\n\r\n}\r\n\r\nexport default Login"],"sourceRoot":""}